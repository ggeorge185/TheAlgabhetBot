Work on the story began in October 1999, and took longer than expected. The team estimated two months, but soon realised they lacked the necessary skills to meet this deadline. Bullfrog Productions|Bullfrog's James Leach, who had previously worked on titles such as ''Dungeon Keeper'' and ''Theme Hospital'', was recruited, and wrote many challenges, all the dialogue, and enabled the team to make the advisers characters rather than just sources of information. The initial designs were produced by artist Christian Bravery, but these were considered too similar to classic devils and angels. Healey redesigned the angel to be more like a fairy. He was accused of putting his girlfriend into the game, something which he agreed with on reflection: he admitted that it looked "rather a lot like her". He then designed an old man resembling a cross between a hippy, a yogi, and a "kindly old man". The advisers' animations and emotions were triggered by keywords in the script document, a Microsoft Excel file consisting of several thousand lines. Much of the script was for the advisers, as they were to comment on everything happening as well as the other things players may want to do.

The challenges and quests were developed to keep players occupied while playing through the story. Molyeux told Leach about the ways of good and evil and the system's reflection of the player's behaviour, and provided him with a digital copy of the Bible with instructions to study the concepts due to their connection with gods and men. Leach decided to supplement the idea of evil with mischief, as he thought being completely evil by annoying or killing followers was senseless. Molyneux wanted a conflict between good and evil, and for the enemy gods to have the opposite alignment to the player. As a method of introducing the player to miracles and combat, a god whose alignment is the same as the player's was added.

Leach, Molyneux, and Webley were considering the final story when Jamie Durrant, an artist, became involved in the scripting language. A level designer, Ken Malcolm, was also hired, and their skills were considered invaluable. Malcolm said that the challenges were imagined as films with multiple endings because the story elements were different to games based on levels. According to him, the team had to "forget the rules" and focus on what players would do.

World domination was the story's goal. The Creed was a way of achieving that goal without having to convert every tribe. The intent was for the Creeds to be hosted inside creatures, obtainable only after the creature was dead. Winning the game would require three Creeds of the same alignment and their placement in the volcano on the fifth land. The explosion would "shatter the world" and the world would be the player's.

The other gods' actions and dialogue were written to be neutral as they could be either good or evil. Some were influenced by the player's alignment, but some lines were spoken regardless of the player's alignment due to lack of space. The concept of good and evil also affected the gods' names: bias towards a particular alignment was avoided because they could be either. Khazar and Lethys were "suitably old and legendary". The name Nemesis was to be replaced with "a huge, powerful name", but was liked by most of the team.

Programmer Oliver Purkiss was hired to program the villagers. He and Molyneux "worked tirelessly" to give the villagers autonomy and individuality without using too much processor power. Purkiss said that they did not want players to believe that villagers were worthless. Afterwards, it was decided that the villagers should have different belief levels, so the player would need to impress more sceptical ones. Richard Evans worked on the villagers' reactivity.

The script editor started out "simple", enabling programmers to perform camera angles and move villagers, and the first script was created when Cottier added a widescreen function. Molyneux wanted "an epic tale", so tools such as cinematography and the ability to analyse the creature and the player's alignment and abilities were needed. Jason Hutchens, an "expert in languages", was hired and helped create a "more natural" language compiler. A system to generalise each approach to challenges was also needed. The script editor and language were simple enough for non-programmers to use, and was also capable of writing complex scripts.

