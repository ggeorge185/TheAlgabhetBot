Deterministic planning was introduced with the Stanford Research Institute Problem Solver|STRIPS planning system, which is a hierarchical planner. Action names are ordered in a sequence and this is a plan for the robot. Hierarchical planning can be compared with an automatic generated Behavior tree (artificial intelligence, robotics and control)|behavior tree. The disadvantage is, that a normal behavior tree is not so expressive like a computer program. That means, the notation of a behavior graph contains action commands, but no Loop (computing)|loops or if-then-statements. Conditional planning overcomes the bottleneck and introduces an elaborated notation which is similar to a control flow, known from other programming languages like Pascal (programming language)|Pascal. It is very similar to program synthesis, which means a planner generates sourcecode which can be executed by an interpreter.

An early example of a conditional planner is “Warplan-C” which was introduced in the mid 1970s. What is the difference between a normal sequence and a complicated plan, which contains if-then-statements? It has to do with uncertainty at Run time (program lifecycle phase)|runtime of a plan. The idea is that a plan can react to Soft sensor|sensor signals which are unknown for the planner. The planner generates two choices in advance. For example, if an object was detected, then action A is executed, if an object is missing, then action B is executed. A major advantage of conditional planning is the ability to handle Partial-order planning|partial plans. An agent is not forced to plan everything from start to finish but can divide the problem into Chunking (computational linguistics)|chunks. This helps to reduce the state space and solves much more complex problems.

