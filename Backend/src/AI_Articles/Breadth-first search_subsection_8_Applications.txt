Breadth-first search can be used to solve many problems in graph theory, for example:
* Copying Garbage collection (computer science)|garbage collection, Cheney's algorithm
* Finding the shortest path between two nodes ''u'' and ''v'', with path length measured by number of edges (an advantage over depth-first search)
* Cuthill–McKee algorithm|(Reverse) Cuthill–McKee mesh numbering
* Ford–Fulkerson algorithm|Ford–Fulkerson method for computing the maximum flow problem|maximum flow in a flow network
* Serialization/Deserialization of a binary tree vs serialization in sorted order, allows the tree to be re-constructed in an efficient manner.
* Construction of the ''failure function'' of the Aho-Corasick pattern matcher.
*Testing Bipartite graph#Testing bipartiteness|bipartiteness of a graph.
*Implementing parallel algorithms for computing a graph's transitive closure. 

