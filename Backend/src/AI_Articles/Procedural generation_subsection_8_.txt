File:Blender3D_VoronoiCrackle.jpg|thumb|[[Procedural texture using Voronoi tessellation]]
<!--Wouldn't it make much more sense to explain why modern games still make use of procedural generation, rather than throw examples? It seems to me that scope (Spore is a huge game, for instance) and replayability (You can play The Binding of Isaac and other roguelikes for hours because it keeps "mixing it up") are the main reasons, but we'd need some references. -->
Though modern computer games do not have the same memory and hardware restrictions that earlier games had, the use of procedural generation is frequently employed to create randomized games, maps, levels, characters, or other facets that are unique on each playthrough.

In 2004, a PC first-person shooter called ''.kkrieger'' was released by a German demo group. It is entirely contained in a 96 kilobyte executable for Microsoft Windows that generates hundreds of megabytes of 3D and texture data when run. According to one of the programmers, "it was a complete failure as far as the game side was concerned (mostly because no one involved really deeply cared about that aspect)."

Naked Sky Entertainment|Naked Sky's ''RoboBlitz'' used procedural generation to maximize content in a less than 50&nbsp;MB downloadable file for Xbox Live Arcade. Will Wright (game designer)|Will Wright's ''Spore (2008 video game)|Spore'' also makes use of procedural synthesis.

Procedural generation is often used in loot systems of quest-driven games, such as action role-playing games and massive multiplayer online role playing games. Though quests may feature fixed rewards, other loot, such as weapons and armor, may be generated for the player based on the player-character's level, the quest's level, their performance in the quest, and other random factors. This often leads to loot having a rarity quality applied to reflect when the procedural generation system has produced an item with better-than-average attributes. For example, the ''Borderlands (series)|Borderlands'' series is based on its procedural generation system which can create over a million unique guns and other equipment.

Many open world or survival games procedurally create a game world from a random seed or one provided by the player, so that each playthrough is different. These generation systems create numerous pixel- or voxel-based biomes with distribution of resources, objects, and creatures. The player frequently has the ability to adjust some of the generation parameters, such as specifying the amount of water coverage in a world. Examples of such games include ''Dwarf Fortress'' and ''Minecraft''.

Procedural generation is also used in space exploration and trading games. ''Elite: Dangerous'', through using the 400 billion known stars of the Milky Way Galaxy as its world basis, uses procedural generation to simulate the planets in these solar systems. Similarly, ''Star Citizen'' uses the technology to create seamlessly loaded planets among its hand-crafted universe. ''Infinity (MMOG)|I-Novae Infinity'' features a plethora of planets which are procedurally generated between which the player can travel via space ships. ''Outerra Anteworld'' is a video game in development that uses procedural generation and real world data to create a virtual replica of planet Earth in true scale.

''No Man's Sky'', by using procedural generation, is the largest video game in history, featuring a universe of 18 quintillion planets across entire galaxies, which can be explored in flight or on foot. The planets all have their own uniquely diverse terrain, weather, flora, and fauna, as well as a number of space-faring alien species. The same content exists at the same places for all players (thanks to a single random seed number to their deterministic engine), which enables players to meet and share discoveries.

