File:Ways to study a system.png|thumb|Ways to study a system
The term computational scientist is used to describe someone skilled in scientific computing. Such a person is usually a scientist, an engineer, or an applied mathematician who applies high-performance computing in different ways to advance the state-of-the-art in their respective applied disciplines in physics, chemistry, or engineering.

Computational science is now commonly considered a third mode of science , complementing and adding to experimentation/observation and theory (see image). Here, one defines a system as a potential source of data, an experiment as a process of extracting data from a system by exerting it through its inputs and a Computer model|model (''M'') for a system (''S'') and an experiment (''E'') as anything to which ''E'' can be applied in order to answer questions about ''S''. A computational scientist should be capable of:
* recognizing '''complex problems'''
* adequately '''conceptualizing''' the system containing these problems
* designing a framework of algorithms suitable for studying this system: the '''simulation'''
* choosing a suitable '''computing infrastructure''' (parallel computing/grid computing/supercomputers)
* hereby, maximizing the '''computational power''' of the simulation
* assessing to what level the output of the simulation resembles the systems: the model is '''validated'''
* adjusting the conceptualization of the system accordingly
* repeat the cycle until a suitable level of validation is obtained: the computational scientist trusts that the simulation generates adequately realistic results for the system under the studied conditions
Substantial effort in computational sciences has been devoted to developing algorithms, efficient implementation in programming languages, and validating computational results. A collection of problems and solutions in computational science can be found in Steeb, Hardy, Hardy, and Stoop (2004).

Philosophers of science addressed the question to what degree computational science qualifies as science, among them Humphreys and Gelfert. They address the general question of epistemology: how does gain insight from such computational science approaches? Tolk uses these insights to show the epistemological constraints of computer-based simulation research. As computational science uses mathematical models representing the underlying theory in executable form, in essence, they apply modeling (theory building) and simulation (implementation and execution). While simulation and computational science are our most sophisticated way to express our knowledge and understanding, they also come with all constraints and limits already known for computational solutions.

