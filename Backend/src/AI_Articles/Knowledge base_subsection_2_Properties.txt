The term "knowledge-base" was coined to distinguish this form of knowledge store from the more common and widely used term ''database''. During the 1970s, virtually all large management information systems stored their data in some type of Hierarchical database model|hierarchical or Relational database|relational database. At this point in the history of information technology, the distinction between a database and a knowledge-base was clear and unambiguous.

A database had the following properties:

* Attributeâ€“value system|Flat data: Data was usually represented in a tabular format with strings or numbers in each field.
* Multiple users: A conventional database needed to support more than one user or system logged into the same data at the same time.
* Database transaction|Transactions: An essential requirement for a database was to maintain integrity and consistency among data accessed by concurrent users. These are the so-called ACID properties: Atomicity, Consistency, Isolation, and Durability.
* Large, long-lived data: A corporate database needed to support not just thousands but hundreds of thousands or more rows of data. Such a database usually needed to persist past the specific uses of any individual program; it needed to store data for years and decades rather than for the life of a program.

The first knowledge-based systems had data needs that were the opposite of these database requirements. An expert system requires Data model|structured data. Not just tables with numbers and strings, but pointers to other objects that in turn have additional pointers. The ideal representation for a knowledge base is an object model (often called an Ontology (information science)|ontology in AI|artificial intelligence literature) with classes, subclasses and instances.

Early expert systems also had little need for multiple users or the complexity that comes with requiring transactional properties on data. The data for the early expert systems was used to arrive at a specific answer, such as a medical diagnosis, the design of a molecule, or a response to an emergency.

The volume requirements were also different for a knowledge-base compared to a conventional database. The knowledge-base needed to know facts about the world. For example, to represent the statement that "All humans are mortal", a database typically could not represent this general knowledge but instead would need to store information about thousands of tables that represented information about specific humans. Representing that all humans are mortal and being able to reason about any given human that they are mortal is the work of a knowledge-base. Representing that George, Mary, Sam, Jenna, Mike,... and hundreds of thousands of other customers are all humans with specific ages, sex, address, etc. is the work for a database.

As expert systems moved from being prototypes to systems deployed in corporate environments the requirements for their data storage rapidly started to overlap with the standard database requirements for multiple, distributed users with support for transactions. Initially, the demand could be seen in two different but competitive markets. From the Artificial intelligence|AI and Object-oriented programming|Object-Oriented communities, Object database|object-oriented databases such as Versant Object Database|Versant emerged. These were systems designed from the ground up to have support for object-oriented capabilities but also to support standard database services as well. On the other hand, the large database vendors such as Oracle Corporation|Oracle added capabilities to their products that provided support for knowledge-base requirements such as class-subclass relations and rules.

