main|Extensive form game}}
File:Ultimatum Game Extensive Form.svg|thumb|right|An extensive form game
The extensive form can be used to formalize games with a time sequencing of moves. Extensive form games can be visualised using game Tree (graph theory)|trees (as pictured here). Here each Graph (discrete mathematics)|vertex (or node) represents a point of choice for a player. The player is specified by a number listed by the vertex. The lines out of the vertex represent a possible action for that player. The payoffs are specified at the bottom of the tree. The extensive form can be viewed as a multi-player generalization of a decision tree. To solve any extensive form game, backward induction must be used. It involves working backward up the game tree to determine what a rational player would do at the last vertex of the tree, what the player with the previous move would do given that the player with the last move is rational, and so on until the first vertex of the tree is reached.

The game pictured consists of two players.  The way this particular game is structured (i.e., with sequential decision making and perfect information), ''Player 1'' "moves" first by choosing either  or  (fair or unfair). Next in the sequence, ''Player 2'', who has now observed ''Player 1''s move, can choose to play either  or   (accept or reject). Once ''Player 2'' has made their choice, the game is considered finished and each player gets their respective payoff, represented in the image as two numbers, where the first number represents Player 1's payoff, and the second number represents Player 2's payoff.  Suppose that ''Player 1'' chooses  and then ''Player 2'' chooses : ''Player 1'' then gets a payoff of "eight" (which in real-world terms can be interpreted in many ways, the simplest of which is in terms of money but could mean things such as eight days of vacation or eight countries conquered or even eight more opportunities to play the same game against other players) and ''Player 2'' gets a payoff of "two".

The extensive form can also capture simultaneous-move games and games with imperfect information. To represent it, either a dotted line connects different vertices to represent them as being part of the same information set (i.e. the players do not know at which point they are), or a closed line is drawn around them. (See example in the #Perfect information and imperfect information|imperfect information section.)

